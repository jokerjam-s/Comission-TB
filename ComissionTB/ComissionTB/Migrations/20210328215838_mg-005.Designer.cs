// <auto-generated />
using System;
using ComissionTB.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ComissionTB.Migrations
{
    [DbContext(typeof(ComissionDbContext))]
    [Migration("20210328215838_mg-005")]
    partial class mg005
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ComissionTB.Data.Dolgn", b =>
                {
                    b.Property<int>("id_dl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("dlName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("isRuk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("id_dl");

                    b.HasIndex("dlName")
                        .IsUnique();

                    b.ToTable("tDolgn");
                });

            modelBuilder.Entity("ComissionTB.Models.Akt", b =>
                {
                    b.Property<int>("aktNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PredsIdId")
                        .HasColumnType("int");

                    b.Property<int?>("SekrIdId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("aktDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("aktText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("cexid_cex")
                        .HasColumnType("int");

                    b.Property<string>("ocenka")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("aktNo");

                    b.HasIndex("PredsIdId");

                    b.HasIndex("SekrIdId");

                    b.HasIndex("cexid_cex");

                    b.ToTable("tAkt");
                });

            modelBuilder.Entity("ComissionTB.Models.AppRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descript")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("ComissionTB.Models.AppUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("dolgnid_dl")
                        .HasColumnType("int");

                    b.Property<int>("tabNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("userDismis")
                        .HasColumnType("datetime2");

                    b.Property<string>("userFio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("userFirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("userPriem")
                        .HasColumnType("datetime2");

                    b.Property<string>("userSecName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("dolgnid_dl");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("ComissionTB.Models.Cex", b =>
                {
                    b.Property<int>("id_cex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserIdId")
                        .HasColumnType("int");

                    b.Property<string>("cexName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id_cex");

                    b.HasIndex("UserIdId");

                    b.HasIndex("cexName")
                        .IsUnique();

                    b.ToTable("cex");
                });

            modelBuilder.Entity("ComissionTB.Models.MailSettings", b =>
                {
                    b.Property<string>("PostMail")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PostPass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostPort")
                        .HasColumnType("int");

                    b.Property<string>("PostSmtp")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToTable("mailSetting");
                });

            modelBuilder.Entity("ComissionTB.Models.Predp", b =>
                {
                    b.Property<int>("prNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("aktNo")
                        .HasColumnType("int");

                    b.Property<int?>("appUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("prDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("prIspDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("prIspNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("prNo");

                    b.HasIndex("aktNo");

                    b.HasIndex("appUserId");

                    b.ToTable("tPredp");
                });

            modelBuilder.Entity("ComissionTB.Models.Sostav", b =>
                {
                    b.Property<int>("id_st")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("aktNo")
                        .HasColumnType("int");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("id_st");

                    b.HasIndex("aktNo");

                    b.HasIndex("userId");

                    b.ToTable("tSostav");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ComissionTB.Models.Akt", b =>
                {
                    b.HasOne("ComissionTB.Models.AppUsers", "PredsId")
                        .WithMany()
                        .HasForeignKey("PredsIdId");

                    b.HasOne("ComissionTB.Models.AppUsers", "SekrId")
                        .WithMany()
                        .HasForeignKey("SekrIdId");

                    b.HasOne("ComissionTB.Models.Cex", "cex")
                        .WithMany("akts")
                        .HasForeignKey("cexid_cex");

                    b.Navigation("cex");

                    b.Navigation("PredsId");

                    b.Navigation("SekrId");
                });

            modelBuilder.Entity("ComissionTB.Models.AppUsers", b =>
                {
                    b.HasOne("ComissionTB.Data.Dolgn", "dolgn")
                        .WithMany("users")
                        .HasForeignKey("dolgnid_dl");

                    b.Navigation("dolgn");
                });

            modelBuilder.Entity("ComissionTB.Models.Cex", b =>
                {
                    b.HasOne("ComissionTB.Models.AppUsers", "UserId")
                        .WithMany()
                        .HasForeignKey("UserIdId");

                    b.Navigation("UserId");
                });

            modelBuilder.Entity("ComissionTB.Models.Predp", b =>
                {
                    b.HasOne("ComissionTB.Models.Akt", "akt")
                        .WithMany("predps")
                        .HasForeignKey("aktNo");

                    b.HasOne("ComissionTB.Models.AppUsers", "appUser")
                        .WithMany()
                        .HasForeignKey("appUserId");

                    b.Navigation("akt");

                    b.Navigation("appUser");
                });

            modelBuilder.Entity("ComissionTB.Models.Sostav", b =>
                {
                    b.HasOne("ComissionTB.Models.Akt", "akt")
                        .WithMany("sostavs")
                        .HasForeignKey("aktNo");

                    b.HasOne("ComissionTB.Models.AppUsers", "user")
                        .WithMany("sostavs")
                        .HasForeignKey("userId");

                    b.Navigation("akt");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("ComissionTB.Models.AppRoles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("ComissionTB.Models.AppUsers", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("ComissionTB.Models.AppUsers", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("ComissionTB.Models.AppRoles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComissionTB.Models.AppUsers", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("ComissionTB.Models.AppUsers", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ComissionTB.Data.Dolgn", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("ComissionTB.Models.Akt", b =>
                {
                    b.Navigation("predps");

                    b.Navigation("sostavs");
                });

            modelBuilder.Entity("ComissionTB.Models.AppUsers", b =>
                {
                    b.Navigation("sostavs");
                });

            modelBuilder.Entity("ComissionTB.Models.Cex", b =>
                {
                    b.Navigation("akts");
                });
#pragma warning restore 612, 618
        }
    }
}
